name: Main

on:
  workflow_dispatch:
    inputs:
      release:
        required: false
        default: "false"
        type: choice
        options:
          - "true"
          - "false"
        description: Release container
  push:
    branches:
      - main
    tags:
      - "v*"
    paths:
      - "src/**"
      - "package.json"
      - "package-lock.json"
  pull_request:
    types:
      - opened
      - synchronize
      - reopened
    paths:
      - "src/**"
      - "package.json"

jobs:
  check:
    name: Code Check
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - uses: actions/setup-node@v4
        with:
          cache: npm

      - name: Install deps
        run: npm ci

      - name: Type checking
        id: typecheck
        run: npm run check:type
        continue-on-error: true

      - name: ESlint Checking
        id: lint
        run: npm run lint
        continue-on-error: true

      - name: Prettier Checking
        id: format
        run: npm run format:check
        continue-on-error: true

      - name: Fail check if any failed
        run: |
          declare -A check_status=(
            ["Type check failed"]=${{ steps.typecheck.outcome == 'failure' }}
            ["Lint check failed"]=${{ steps.lint.outcome == 'failure' }}
            ["Format check failed"]=${{ steps.format.outcome == 'failure' }}
          )
          fail=false
          for msg in "${!check_status[@]}"; do
              if [ "${check_status[$msg]}" = "true" ]; then
                  echo "ERROR: $msg" >&2
                  fail=true
              fi
          done
          if [ "$fail" = true ]; then
              exit 1
          fi
          echo "All checks passed successfully"

  sonar:
    name: SonarQube
    runs-on: ubuntu-latest
    if: ${{ github.event_name == 'push' || github.event_name == 'pull_request' }}
    steps:
      - name: Checkout
        uses: actions/checkout@v5
        with:
          fetch-depth: 0

      - name: SonarQube Scan
        uses: SonarSource/sonarqube-scan-action@v6
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  build-image:
    name: Build & Push Docker Image
    runs-on: ubuntu-latest
    needs: check
    if: >-
      ${{
        startsWith(github.ref, 'refs/tags/v') ||
        (github.event_name == 'workflow_dispatch' && inputs.release == 'true')
      }}
    permissions:
      packages: write
    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Get commit hash
        id: commit-hash
        run: echo "commit=$(git rev-parse HEAD)" >>"${GITHUB_OUTPUT}"

      - name: Login
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: |
            ghcr.io/${{ github.repository }}:latest
            ghcr.io/${{ github.repository }}:${{ steps.commit-hash.outputs.commit }}
            ghcr.io/${{ github.repository }}:${{ github.ref_name }}

  update-kube:
    name: Update Kubernetes Manifest
    runs-on: ubuntu-latest
    needs: build-image
    steps:
      - name: Get token
        id: get-token
        uses: actions/create-github-app-token@v2
        with:
          private-key: ${{ secrets.ELECTRICILIES_BOT_PRIVATE_KEY }}
          app-id: ${{ vars.ELECTRICILIES_BOT_APP_ID }}
          owner: ${{ github.repository_owner }}
          repositories: kubernetes-manifest

      - name: Trigger Renovate
        uses: peter-evans/repository-dispatch@v3
        with:
          token: ${{ steps.get-token.outputs.token }}
          repository: ${{ github.repository_owner }}/kubernetes-manifest
          event-type: renovate
          client-payload: |- # language: json
            {
              "images": "ghcr.io/${{ github.repository }}"
            }
